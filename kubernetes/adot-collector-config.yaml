apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: adot-collector
  namespace: fargate-container-insights
spec:
  mode: deployment
  serviceAccount: adot-collector-script
  config: |
    receivers:
      filelog:
        include: [ /var/log/containers/*bioapptives*.log ]
        start_at: beginning
        include_file_path: true
        operators:
          - type: regex_parser
            regex: '(?P<error>.*(?:kombu\.exceptions\.OperationalError: \[Errno -2\] Name or service not known|Cannot connect to amqp://guest:\*\*@rabbitmq-0\.rabbitmq\.bioapptives\.svc\.cluster\.local:5672//|Connection reset by peer).*)'
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%d %H:%M:%S.%L'

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024

      filter:
        logs:
          include:
            match_type: regexp
            logs_pattern: ".*(kombu\\.exceptions\\.OperationalError: \\[Errno -2\\] Name or service not known|Cannot connect to amqp://guest:\\*\\*@rabbitmq-0\\.rabbitmq\\.bioapptives\\.svc\\.cluster\\.local:5672//|Connection reset by peer).*"

    exporters:
      awscloudwatch:
        region: '${AWS_REGION}'
        log_group_name: '/aws/eks/fargate-container-insights/bioapptives'
        log_stream_name: '${POD_NAME}'
        dimension_rollup_option: NoDimensionRollup
        namespace: BioapptivesErrors
        metrics:
          - name: ErrorCount
            unit: Count
            value: 1
            dimensions:
              - name: ErrorType
                value: OperationalError
              - name: Namespace
                value: bioapptives
          - name: ConnectionErrorCount
            unit: Count
            value: 1
            dimensions:
              - name: ErrorType
                value: ConnectionError
              - name: Namespace
                value: bioapptives

    service:
      pipelines:
        logs:
          receivers: [filelog]
          processors: [batch, filter]
          exporters: [awscloudwatch]
